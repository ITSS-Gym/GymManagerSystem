<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.milotnt.mapper.FeedbackEmployeeMapper">

    <select id="findAll" resultType="feedbackEmployee">
        SELECT feedback_employee.feedback_id, feedback_employee.member_account, member.member_name,
        feedback_employee.employee_account, employee.employee_name, feedback_employee.content, feedback_employee.time_created
        FROM feedback_employee
        INNER JOIN employee ON feedback_employee.employee_account = employee.employee_account
        INNER JOIN member ON feedback_employee.member_account = member.member_account
    </select>

    <delete id="deleteByFeedbackId" parameterType="java.lang.Integer">
        DELETE
        FROM feedback_employee
        WHERE feedback_id = #{feedbackId}
    </delete>

    <insert id="insertFeedbackEmployee" parameterType="feedbackEmployee">
        INSERT INTO feedback_employee (feedback_id, member_account, employee_account, content, time_created)
        VALUES (#{feedback_id}, #{memberAccount}, #{employeeAccount}, #{content}, #{time_created})
    </insert>

<!--    <update id="updateByFeedbackId" parameterType="feedbackEmployee">-->
<!--        UPDATE feedback_employee-->
<!--        SET member_account = #{memberAccount},-->
<!--        employee_account   = #{employeeAccount},-->
<!--        content            = #{content},-->
<!--        WHERE feedback_id = #{feedbackId}-->
<!--    </update>-->

    <select id="selectByFeedbackId" parameterType="java.lang.Integer" resultType="feedbackEmployee">
<!--        SELECT feedback_employee.feedback_id, feedback_employee.member_account, member.member_name,-->
<!--        feedback_employee.employee_account, employee.employee_name, feedback_employee.content, feedback_employee.time_created-->
<!--        FROM feedback_employee-->
        SELECT *
        INNER JOIN employee ON feedback_employee.employee_account = employee.employee_account
        INNER JOIN member ON feedback_employee.member_account = member.member_account
        WHERE feedback_id = #{feedbackId}
    </select>

    <select id="selectByMemberAccount" parameterType="java.lang.Integer" resultType="feedbackEmployee">
        SELECT feedback_employee.feedback_id, feedback_employee.member_account, member.member_name,
            feedback_employee.employee_account, employee.employee_name, feedback_employee.content, feedback_employee.time_created
        FROM feedback_employee
        INNER JOIN employee ON feedback_employee.employee_account = employee.employee_account
        INNER JOIN member ON feedback_employee.member_account = member.member_account
        WHERE feedback_employee.member_account = #{memberAccount}
    </select>

    <select id="selectByEmployeeAccount" parameterType="java.lang.Integer" resultType="feedbackEmployee">
        SELECT feedback_employee.feedback_id, feedback_employee.member_account, member.member_name,
                feedback_employee.employee_account, employee.employee_name, feedback_employee.content, feedback_employee.time_created
        FROM feedback_employee
        INNER JOIN member ON feedback_employee.member_account = member.member_account
        INNER JOIN employee ON feedback_employee.employee_account = employee.employee_account
        WHERE feedback_employee.employee_account = #{employeeAccount};
    </select>

</mapper>